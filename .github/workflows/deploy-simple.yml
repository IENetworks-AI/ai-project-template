name: Deploy to Oracle Server (Simple)

on:
  workflow_dispatch:

jobs:
  deploy-simple:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ORACLE_SSH_KEY }}" > ~/.ssh/oracle.key
          chmod 600 ~/.ssh/oracle.key
          ssh-keyscan -H 139.185.33.139 >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/oracle.key ubuntu@139.185.33.139 "echo '‚úÖ SSH connection successful'; uname -a"

      - name: Ensure server has required tools
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/oracle.key ubuntu@139.185.33.139 << 'EOF'
            echo "üîß Ensuring server has required tools..."
            
            # Fix dpkg interruption first
            echo "üîß Fixing dpkg interruption..."
            sudo dpkg --configure -a
            
            # Handle apt locks if needed
            sudo killall apt apt-get || true
            sudo rm -f /var/lib/apt/lists/lock /var/cache/apt/archives/lock /var/lib/dpkg/lock* /var/lib/dpkg/lock-frontend || true
            
            # Update and install required packages
            sudo apt-get update -qq
            sudo apt-get install -y tar gzip curl -qq
            
            echo "‚úÖ Server tools verified"
          EOF

      - name: Create deployment archive
        run: |
          echo "üì¶ Creating deployment archive..."
          tar -czf deployment.tar.gz --exclude='.git' --exclude='venv' --exclude='__pycache__' .
          echo "‚úÖ Archive created: $(ls -la deployment.tar.gz)"

      - name: Deploy using scp
        run: |
          echo "üöÄ Deploying using scp..."
          scp -i ~/.ssh/oracle.key -o StrictHostKeyChecking=no deployment.tar.gz ubuntu@139.185.33.139:/tmp/
          echo "‚úÖ Archive uploaded to server"

      - name: Extract and deploy on server
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/oracle.key ubuntu@139.185.33.139 << 'EOF'
            echo "üì¶ Extracting deployment archive..."
            cd /home/ubuntu
            rm -rf ai-project-template-backup
            mv ai-project-template ai-project-template-backup 2>/dev/null || true
            mkdir -p ai-project-template
            cd ai-project-template
            tar -xzf /tmp/deployment.tar.gz
            rm /tmp/deployment.tar.gz
            echo "‚úÖ Code extracted successfully"
          EOF

      - name: Run deployment script
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/oracle.key ubuntu@139.185.33.139 "cd /home/ubuntu/ai-project-template && chmod +x deploy.sh && ./deploy.sh"

      - name: Verify deployment
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/oracle.key ubuntu@139.185.33.139 << 'EOF'
            echo "üîç Verifying deployment..."
            
            # Check if service is running
            if sudo systemctl is-active --quiet aiapp; then
              echo "‚úÖ aiapp service is running"
              sudo systemctl status aiapp --no-pager -l
            else
              echo "‚ùå aiapp service is not running"
              sudo systemctl status aiapp --no-pager -l
              exit 1
            fi
            
            # Check if app is responding
            if curl -f http://localhost:5000/health 2>/dev/null; then
              echo "‚úÖ Application is responding"
            else
              echo "‚ö†Ô∏è Application health check failed"
            fi
          EOF 