name: ML Pipeline CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m pytest tests/ -v

  preprocess:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run data preprocessing
        run: |
          python pipelines/ai_pipeline.py

      - name: Archive processed data
        uses: actions/upload-artifact@v4
        with:
          name: processed-data
          path: data/processed/

  train:
    needs: preprocess
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download processed data
        uses: actions/download-artifact@v4
        with:
          name: processed-data
          path: data/processed/

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train and evaluate models
        run: |
          python pipelines/ai_pipeline.py

      - name: Archive models and results
        uses: actions/upload-artifact@v4
        with:
          name: models-and-results
          path: |
            models/
            data/processed/evaluation_results.csv
            data/processed/evaluation_report.txt

  deploy:
    needs: train
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Download models and results
        uses: actions/download-artifact@v4
        with:
          name: models-and-results
          path: models/

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy model
        run: |
          echo "Model deployment completed successfully!"
          echo "Model files are ready for production use."
          ls -la models/

