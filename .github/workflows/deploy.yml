name: Deploy to Oracle Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ORACLE_SSH_KEY }}" > ~/.ssh/oracle.key
          chmod 600 ~/.ssh/oracle.key
          ssh-keyscan -H 139.185.33.139 >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/oracle.key ubuntu@139.185.33.139 "echo '✅ SSH connection successful'; uname -a"

      - name: Install rsync on runner
        run: |
          echo "🔧 Installing rsync on GitHub Actions runner..."
          sudo apt-get update -qq
          sudo apt-get install -y rsync -qq
          echo "✅ rsync installed successfully"
          rsync --version

      - name: Verify rsync is working
        run: |
          echo "🔍 Verifying rsync functionality..."
          which rsync
          rsync --version | head -1
          echo "✅ rsync is ready for deployment"

      - name: Deploy Code to Oracle
        run: |
          echo "🚀 Starting deployment..."
          echo "📁 Current directory: $(pwd)"
          echo "📋 Files to deploy:"
          ls -la | head -10
          echo "🔄 Running rsync command..."
          rsync -avz --delete -e "ssh -i ~/.ssh/oracle.key -o StrictHostKeyChecking=no" ./ ubuntu@139.185.33.139:/home/ubuntu/ai-project-template/
          echo "✅ Code deployment completed"

      - name: Run deployment script
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/oracle.key ubuntu@139.185.33.139 "cd /home/ubuntu/ai-project-template && chmod +x deploy.sh && ./deploy.sh"

      - name: Verify deployment
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/oracle.key ubuntu@139.185.33.139 << 'EOF'
            echo "🔍 Verifying deployment..."
            
            # Check if service is running
            if sudo systemctl is-active --quiet aiapp; then
              echo "✅ aiapp service is running"
              sudo systemctl status aiapp --no-pager -l
            else
              echo "❌ aiapp service is not running"
              sudo systemctl status aiapp --no-pager -l
              exit 1
            fi
            
            # Check if app is responding
            if curl -f http://localhost:5000/health 2>/dev/null; then
              echo "✅ Application is responding"
            else
              echo "⚠️ Application health check failed"
            fi
          EOF
