name: Branch Protection and Code Review

on:
  pull_request:
    branches: [ main, Test-Branch ]
  push:
    branches: [ main, Test-Branch ]

jobs:
  # Code quality checks
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linting
        run: |
          echo "üîç Running code quality checks..."
          # Add any linting tools you want to use
          # Example: flake8, black, pylint, etc.
          echo "‚úÖ Code quality checks completed"

      - name: Check file structure
        run: |
          echo "üìÅ Checking project structure..."
          
          required_files=(
            "requirements.txt"
            "config/config.yaml"
            "pipelines/ai_pipeline.py"
            "data/Sales Dataset.csv"
            "src/__init__.py"
            "src/utils/__init__.py"
            "etl/extract/extract_data.py"
            "etl/transform/transform_data.py"
            "etl/load/load_data.py"
          )
          
          missing_files=()
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              missing_files+=("$file")
            fi
          done
          
          if [ ${#missing_files[@]} -eq 0 ]; then
            echo "‚úÖ All required files present"
          else
            echo "‚ùå Missing required files:"
            printf '%s\n' "${missing_files[@]}"
            exit 1
          fi

  # Security checks
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Security scan
        run: |
          echo "üîí Running security checks..."
          # Add security scanning tools here
          # Example: bandit, safety, etc.
          echo "‚úÖ Security checks completed"

  # Documentation check
  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check documentation
        run: |
          echo "üìö Checking documentation..."
          
          required_docs=(
            "README.md"
            "ORACLE_DEPLOYMENT_SETUP.md"
          )
          
          for doc in "${required_docs[@]}"; do
            if [ -f "$doc" ]; then
              echo "‚úÖ $doc found"
            else
              echo "‚ö†Ô∏è $doc missing"
            fi
          done

  # Pull request validation
  pr-validation:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Validate Pull Request
        run: |
          echo "üîç Pull Request Validation"
          echo "=========================="
          echo "PR Title: ${{ github.event.pull_request.title }}"
          echo "PR Description: ${{ github.event.pull_request.body }}"
          echo "Source Branch: ${{ github.event.pull_request.head.ref }}"
          echo "Target Branch: ${{ github.event.pull_request.base.ref }}"
          echo ""
          
          # Check if PR has description
          if [ -z "${{ github.event.pull_request.body }}" ]; then
            echo "‚ö†Ô∏è Warning: Pull request has no description"
          else
            echo "‚úÖ Pull request has description"
          fi
          
          # Check if PR is to main branch
          if [ "${{ github.event.pull_request.base.ref }}" = "main" ]; then
            echo "üö® WARNING: Direct PR to main branch detected!"
            echo "   Please create PR to Test-Branch first for review"
          elif [ "${{ github.event.pull_request.base.ref }}" = "Test-Branch" ]; then
            echo "‚úÖ PR to Test-Branch - this is the correct workflow"
          else
            echo "‚ÑπÔ∏è PR to other branch"
          fi

  # Branch-specific checks
  branch-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Branch-specific validation
        run: |
          echo "üåø Branch-specific checks for ${{ github.ref_name }}"
          echo "================================================"
          
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "üîí Main branch detected"
            echo "   - Only admin merges allowed"
            echo "   - Deployment will run automatically"
            echo "   - All tests must pass"
            
          elif [ "${{ github.ref_name }}" = "Test-Branch" ]; then
            echo "üß™ Test-Branch detected"
            echo "   - Team collaboration branch"
            echo "   - All tests run but no deployment"
            echo "   - Code review required"
            
          else
            echo "üîß Feature branch detected"
            echo "   - Development branch"
            echo "   - Basic tests run"
            echo "   - Create PR to Test-Branch when ready"
          fi 